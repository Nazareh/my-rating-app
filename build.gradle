plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.netflix.dgs.codegen" version "6.1.5"
}

group = 'com.turminaz'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'com.graphql-java:graphql-java-extended-scalars:19.0' // bump up as soon as netflix allows it
	implementation("com.tailrocks.graphql:graphql-datetime-spring-boot-starter:6.0.0")
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation platform("com.google.cloud:spring-cloud-gcp-dependencies:5.1.0")
	implementation("com.google.cloud:spring-cloud-gcp-starter-data-firestore")
	implementation 'com.google.firebase:firebase-admin:9.2.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testImplementation 'uk.co.jemos.podam:podam:8.0.1.RELEASE'

}

tasks.named('test') {
	useJUnitPlatform()
}

generateJava{
	schemaPaths = ["${projectDir}/src/main/resources/graphql"] // List of directories containing schema files
}
